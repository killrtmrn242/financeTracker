require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const path = require('path');

// –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤ API
const authRoutes = require('./routes/authRoutes');
const transactionRoutes = require('./routes/transactionRoutes');
const userRoutes = require("./routes/userRoutes");

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = express();

// Middleware
app.use(cors());
app.use(express.json());

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
app.use((req, res, next) => {
    console.log(`üî• –ó–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
    next();
});

// –ú–∞—Ä—à—Ä—É—Ç—ã API (–≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º /api –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –∑–¥–µ—Å—å)
app.use("/api/users", userRoutes);
app.use('/api/auth', authRoutes);
app.use('/api/transactions', transactionRoutes);

// –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (—Å–±–æ—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –ø–∞–ø–∫–µ "frontend")
app.use(express.static(path.join(__dirname, 'frontend')));

// –î–ª—è –≤—Å–µ—Ö GET-–∑–∞–ø—Ä–æ—Å–æ–≤, –Ω–µ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å /api, –æ—Ç–¥–∞–µ–º index.html (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ SPA)
app.get(/^\/(?!api).*/, (req, res) => {
  res.sendFile(path.join(__dirname, 'frontend', 'index.html'));
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è POST, PUT, DELETE), –µ—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
app.use((req, res) => {
    res.status(404).json({ error: "–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω" });
});

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const connectDB = async () => {
    try {
        console.log("üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...");
        console.log("üîç MONGO_URI:", process.env.MONGO_URI);
        
        await mongoose.connect(process.env.MONGO_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true
        });
        console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω');

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ
        const PORT = process.env.PORT || 5000;
        app.listen(PORT, () => {
            console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
        });

    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err);
        process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    }
};

connectDB();
